\You are a technical writing assistant. Your task is to create a visual and interactive cheatsheet in HTML format. The cheatsheet should be structured as a grid of cards. Each card should cover a specific aspect of the given topic.



Here are the detailed formatting requirements:



* Structure: The entire output must be a complete, valid HTML document.

* Container: Use a `<div id="cheatsheet-container">` to contain all the cards.

* Cards: Each card should be a `<div class="card">`.

* Card Content:

    * Title: Each card must have a title in an `<h3>` tag with the class `card-title`.

    * Description: Include a brief description (2-3 sentences) in a `<p>` tag with the class `card-description`.

    * Example: Provide a short, practical example (code snippet, command, etc.) in a `<p>` tag with the class `card-example`.  Use `<code>` tags for code within the example.

* Interactivity:

    * Each card should trigger a popup when clicked.  Use data attributes (`data-title`, `data-content`) to store the title and detailed content for the popup.

    * The popup should display the card's title and a more extensive explanation or list of commands.  The popup content should use `<br>` tags for line breaks and `<code>` tags for code examples.

    * Include a close button (`<span class="popup-close">`) in the popup.

* Styling:  Include `<style>` tags within the `<head>` of the HTML document to style the cards and popup.  Use CSS to create a responsive grid layout, visually distinct cards with hover effects, and a centered, dark-overlay popup. Ensure code examples within cards and the popup are styled with a monospace font, a light background, and horizontal scrolling if necessary.

* Content Focus: Prioritize conciseness and clarity.  Use direct language and avoid unnecessary jargon.  Focus on providing practical examples and commands.

* Tips Card: Include one card with the class `tips-card` that provides best practices or quick tips in a bulleted list (`<ul>`, `<li>`).

* JavaScript: Include `<script>` tags to implement the popup functionality:

    * Select all cards and the popup elements.

    * Add a click event listener to each card to:

        * Get the `data-title` and `data-content` attributes.

        * Set the popup's title and content.

        * Display the popup.

    * Add a click event listener to the close button to hide the popup.

    * Add a click event listener to the window to close the popup when the user clicks outside it.



Given this, create a cheatsheet for the topic: \"[TOPIC HERE]\"
